"use strict";(self.webpackChunkgemwallet_website=self.webpackChunkgemwallet_website||[]).push([[318],{50259:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=t(85893),s=t(11151);const o={id:"using-gemwallet-in-node-js",title:"Using GemWallet in Node.js",description:"Provides the documentation on how to use GemWallet in a Node.js application like React thanks to npm.",sidebar_position:3},l=void 0,a={id:"api/using-gemwallet-in-node-js",title:"Using GemWallet in Node.js",description:"Provides the documentation on how to use GemWallet in a Node.js application like React thanks to npm.",source:"@site/versioned_docs/version-1.0.2/api/using-in-node-js.md",sourceDirName:"api",slug:"/api/using-gemwallet-in-node-js",permalink:"/docs/1.0.2/api/using-gemwallet-in-node-js",draft:!1,unlisted:!1,editUrl:"https://github.com/GemWallet/gemwallet-website/blob/master/versioned_docs/version-1.0.2/api/using-in-node-js.md",tags:[],version:"1.0.2",sidebarPosition:3,frontMatter:{id:"using-gemwallet-in-node-js",title:"Using GemWallet in Node.js",description:"Provides the documentation on how to use GemWallet in a Node.js application like React thanks to npm.",sidebar_position:3},sidebar:"docs",previous:{title:"Using GemWallet in the browser",permalink:"/docs/1.0.2/api/using-gemwallet-in-browser"},next:{title:"isConnected",permalink:"/docs/1.0.2/playground/isConnected"}},c={},d=[{value:"Installing the library",id:"installing-the-library",level:2},{value:"Methods",id:"methods",level:2},{value:"isConnected()",id:"isconnected",level:3},{value:"getNetwork()",id:"getnetwork",level:3},{value:"transactionRequest()",id:"transactionrequest",level:3}];function r(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"This page assumes that you have GemWallet installed."})}),"\n",(0,i.jsx)(n.h2,{id:"installing-the-library",children:"Installing the library"}),"\n",(0,i.jsx)(n.p,{children:"Let's first install the library from npm:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Install the module using npm: ",(0,i.jsx)(n.code,{children:"npm install @gemwallet/api"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Install the module using yarn: ",(0,i.jsx)(n.code,{children:"yarn add @gemwallet/api"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now let's dig into what functionalities are available to you."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"isconnected",children:"isConnected()"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"We definitely recommend that you check if the user is connected before using any of the other methods available."})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"isConnected() -> <Promise<boolean>>"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"true"})," if the user has GemWallet extension installed, and ",(0,i.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(n.p,{children:"Here is an example with a React web application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { isConnected } from "@gemwallet/api";\n\nfunction App() {\n  const handleConnect = () => {\n    isConnected().then((isConnected) =>\n      console.log(`Is the user having gemwallet installed? ${isConnected}`)\n    );\n  };\n  return (\n    <div className="App">\n      <button onClick={handleConnect}>Click me!</button>\n    </div>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"getnetwork",children:"getNetwork()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"getNetwork() -> <Promise<'TEST'|'MAIN'>>"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"TEST"})," if the user is connected to the ",(0,i.jsx)(n.code,{children:"test network"}),", and ",(0,i.jsx)(n.code,{children:"MAIN"})," if connected to the ",(0,i.jsx)(n.code,{children:"main network"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Here is an example with a React web application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { isConnected, getNetwork } from "@gemwallet/api";\n\nfunction App() {\n  const handleConnect = () => {\n    isConnected().then((isConnected) => {\n      if (isConnected) {\n        getNetwork().then((network) => {\n          console.log(`NETWORK: ${network}`);\n        });\n      }\n    });\n  };\n\n  return (\n    <div className="App">\n      <button onClick={handleConnect}>Click me!</button>\n    </div>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"transactionrequest",children:"transactionRequest()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"transactionRequest() -> <Promise<'waiting'|'pending'|'success'|'rejected'>>"})}),"\n",(0,i.jsx)(n.p,{children:"Transaction can have 4 stages:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"waiting"}),": waiting for a user interaction"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pending"}),": transaction is pending to be a success or rejected (in progress)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"success"}),": transaction has been successful"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rejected"}),": transaction has been rejected"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here is an example with a React web application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { isConnected, transactionRequest } from "@gemwallet/api";\n\nfunction App() {\n  const handleConnect = () => {\n    isConnected().then((isConnected) => {\n      if (isConnected) {\n        const transaction = {\n          chain: "xrp",\n          network: "TEST",\n          transaction: "payment",\n          amount: "50",\n          destination: "rMrXopFSnCDSd5Eej4TpeHrV7SPjKtLpo2",\n          token: "xrp",\n          apiVersion: 1,\n        };\n        transactionRequest(transaction).then((status) => {\n          console.log(`TRANSACTION STATUS: ${status}`);\n        });\n      }\n    });\n  };\n\n  return (\n    <div className="App">\n      <button onClick={handleConnect}>Click me!</button>\n    </div>\n  );\n}\n\nexport default App;\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}}}]);