"use strict";(self.webpackChunkgemwallet_website=self.webpackChunkgemwallet_website||[]).push([[7858],{86296:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=e(85893),i=e(11151),a=e(23878);const o={id:"signTransaction",title:"signTransaction",description:"Provides a playground to test signTransaction function"},r=void 0,c={id:"playground/signTransaction",title:"signTransaction",description:"Provides a playground to test signTransaction function",source:"@site/versioned_docs/version-3.5.1/playground/signTransaction.mdx",sourceDirName:"playground",slug:"/playground/signTransaction",permalink:"/docs/3.5.1/playground/signTransaction",draft:!1,unlisted:!1,editUrl:"https://github.com/GemWallet/gemwallet-website/blob/master/versioned_docs/version-3.5.1/playground/signTransaction.mdx",tags:[],version:"3.5.1",frontMatter:{id:"signTransaction",title:"signTransaction",description:"Provides a playground to test signTransaction function"},sidebar:"docs",previous:{title:"signMessage",permalink:"/docs/3.5.1/playground/signMessage"},next:{title:"submitBulkTransactions",permalink:"/docs/3.5.1/playground/submitBulkTransactions"}},l={},d=[{value:"<code>signTransaction()</code>",id:"signtransaction",level:4}];function g(n){const s={code:"code",h4:"h4",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h4,{id:"signtransaction",children:(0,t.jsx)(s.code,{children:"signTransaction()"})}),"\n","\n","\n",(0,t.jsxs)("strong",{children:["Test GemWallet's ",(0,t.jsx)(s.code,{children:"signTransaction"})," method:"]}),"\n",(0,t.jsx)(a.h,{})]})}function u(n={}){const{wrapper:s}={...(0,i.a)(),...n.components};return s?(0,t.jsx)(s,{...n,children:(0,t.jsx)(g,{...n})}):g(n)}},23878:(n,s,e)=>{e.d(s,{h:()=>r});var t=e(67294),i=e(45547),a=e(85893);const o={transaction:{TransactionType:"Payment",Destination:"rhikRdkFw28csKw9z7fVoBjWncz1HSoQij",Amount:"100000",Memos:[{Memo:{MemoData:"54657374206D656D6F",MemoType:"4465736372697074696F6E"}}]}},r=()=>{const[n,s]=(0,t.useState)(""),[e,r]=(0,t.useState)(""),c=(0,t.useCallback)((async()=>{try{if(!(await(0,i.isInstalled)()).result.isInstalled)return void r("Please install GemWallet");const n=await(0,i.signTransaction)(o);if("reject"===n.type)return void r("The signature of the message has been refused!");s(n.result.signature)}catch(e){r("Something went wrong!")}}),[]);return(0,a.jsxs)("section",{children:[(0,a.jsxs)("div",{children:["This button is using the following transaction to be signed:",(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:JSON.stringify(o,null,4)})})]}),n?(0,a.jsxs)("div",{style:{display:"block",margin:"1em 0"},children:["Message: ",n]}):null,!n&&e?(0,a.jsxs)("div",{style:{display:"block",margin:"1em 0"},children:["Error: ",e]}):null,(0,a.jsx)("button",{type:"button",style:{margin:"1em 0"},onClick:c,children:"Sign Transaction"})]})}}}]);